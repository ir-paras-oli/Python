name: Python Project (short workflow STAGE)

on:
  workflow_dispatch:

permissions:
  checks: write
  contents: write
  packages: read

jobs:
  python-application-build:
    runs-on: ubuntu-latest
    name: Run build
    steps:
      - name: Setup PSE
        uses: invisirisk/pse-action@v1.0.20
        with:
          api_url: "https://app.stage.invisirisk.com"
          app_token: ${{ secrets.IR_API_KEY }}
          
      - uses: actions/checkout@v4

      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

     # - name: Install dependencies
       # run: pip install -r requirements.txt



       # run: pip install --no-deps --trusted-host pypi.org --trusted-host files.pythonhosted.org requests33==0.1.0
      # run: pip install --no-deps --trusted-host pypi.org --trusted-host files.pythonhosted.org flask33==0.1.0
      # run: pip install --no-deps -i https://test.pypi.org/simple/ requestss
        
      - name: Download .whl.metadata file with curl
        run: |
          curl -k -O https://files.pythonhosted.org/packages/83/5c/0627be4c9976d56b1217cb5187b7504e7fd7d3503f8bfd312a04077bd4f7/requestss-7.2.0-py2.py3-none-any.whl.metadata
        
   #   - name: ðŸ˜ˆ Execute malicious script
    #    run: bash run_malicious_scripts.sh
        
      - name: Cleanup PSE
        if: always()
        uses: invisirisk/pse-action@v1.0.20
        with:
          cleanup: "true"
